<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nbclass.mapper.CommentMapper">

    <resultMap id="BaseResultMap" type="com.nbclass.model.BlogComment" >
        <result column="id" property="id" />
        <result column="sid" property="sid" />
        <result column="mid" property="mid" />
        <result column="parent_id" property="parentId" />
        <result column="parent_nickname" property="parentNickname" />
        <result column="qq" property="qq" />
        <result column="nickname" property="nickname" />
        <result column="avatar" property="avatar" />
        <result column="email" property="email" />
        <result column="ip" property="ip" />
        <result column="os" property="os" />
        <result column="browser" property="browser" />
        <result column="content" property="content" />
        <result column="floor" property="floor" />
        <result column="support_num" property="supportNum" />
        <result column="oppose_num" property="opposeNum" />
        <result column="status" property="status" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
        <association property="article" javaType="com.nbclass.model.BlogArticle">
            <result property="id" jdbcType="INTEGER" column="article_id"/>
            <result property="title" jdbcType="VARCHAR" column="article_title"/>
            <result property="aliasName" jdbcType="VARCHAR" column="article_alias_name"/>
        </association>
        <association property="parent" javaType="com.nbclass.model.BlogComment">
            <result property="id" jdbcType="INTEGER" column="parent_id"/>
            <result property="nickname" jdbcType="VARCHAR" column="parent_nickname"/>
            <result property="content" jdbcType="VARCHAR" column="parent_content"/>
        </association>
    </resultMap>

    <sql id="Base_Column_List">
        id,
        sid,
        mid,
        parent_id,
        parent_nickname,
        qq,
        nickname,
        avatar,
        email,
        ip,
        os,
        browser,
        content,
        floor,
        support_num,
        oppose_num,
        status,
        create_time,
        update_time
    </sql>

    <select id="selectList" parameterType="integer" resultMap="BaseResultMap">
        SELECT
            t.id,
            t.sid,
            t.qq,
            t.nickname,
            t.avatar,
            t.email,
            t.ip,
            t.os,
            t.browser,
            t.content,
            t.floor,
            t.support_num,
            t.oppose_num,
            t.create_time,
            t.status,
            p.id AS parent_id,
            p.nickname AS parent_nickname,
            p.content AS parent_content,
            a.id as article_id,
            a.title as article_title,
            a.alias_name as article_alias_name
        FROM
            blog_comment t
        LEFT JOIN blog_comment p ON t.parent_id = p.id
        LEFT JOIN blog_article a ON  t.sid = a.id
        <if test="status !=null">
            WHERE t.status = #{status}
        </if>
        ORDER BY t.id DESC
    </select>


    <select id="selectBySid" parameterType="integer" resultMap="BaseResultMap">
       SELECT
            t.id,
            t.sid,
            t.qq,
            t.nickname,
            t.avatar,
            t.email,
            t.ip,
            t.os,
            t.browser,
            t.content,
            t.floor,
            t.support_num,
            t.oppose_num,
            t.create_time
        FROM
            blog_comment t
        WHERE
            t.status = 1
        AND t.sid = #{sid}
        AND t.mid IS NULL
        ORDER BY t.id DESC
    </select>

    <select id="selectByMids" resultMap="BaseResultMap">
        SELECT
        t.id,
        t.mid,
        t.qq,
        t.nickname,
        t.avatar,
        t.email,
        t.ip,
        t.os,
        t.browser,
        t.content,
        t.floor,
        t.support_num,
        t.oppose_num,
        t.parent_id,
        t.parent_nickname,
        t.create_time
        FROM blog_comment t
        WHERE t.status = 1
        AND
        t.mid
        IN
        <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
        ORDER BY t.id ASC
    </select>

    <update id="updateNum" parameterType="map">
        update blog_comment
        <set>
            <if test="supportNum != null">support_num = support_num+1, </if>
            <if test="opposeNum != null">oppose_num = oppose_num+1, </if>
        </set>
        where id=#{commentId}
    </update>

    <select id="selectMaxFloorBySid" resultType="integer">
        select max(floor)
        from blog_comment
        where sid = #{sid}
    </select>


    <delete id="deleteBatchByArticleIds">
        delete from
        blog_comment
        where
        sid in
        <foreach collection="array" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <update id="auditBatch">
        update blog_comment
        set `status` = 1
        where
        id in
        <foreach collection="array" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <delete id="deleteBatch" parameterType="map">
        delete from
        blog_comment
        where
        id in
        <foreach collection="array" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
        or parent_id in
        <foreach collection="array" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

</mapper>